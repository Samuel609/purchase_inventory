/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com.bits.ui;

import com.bits.Product;
import com.bits.ProductGroup;
import com.bits.Unit;
import com.bits.Purchase;
import com.bits.services.PurchaseServices;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;

/**
 *
 * @author ALE
 */
public class PurchaseInternalFrame extends javax.swing.JInternalFrame {

    PurchaseTableModel model;
    HashMap<String, String> product_type = new HashMap<>();

    /*
    This is just for demonstration. The products should be combined with the main product class.
     */
    public void fillItemBox() {
        product_type.put("Coffee", "10");
        product_type.put("Sugar", "65");
        product_type.put("Coca-Cola", "25");
        product_type.put("Chocolate", "20");
        product_type.put("Soap", "13");

        for (Map.Entry entry : product_type.entrySet()) {
            Object items = entry.getKey();
            productDropDownnBox.addItem((String) items);
        }
    }

    /**
     * Creates new form PurchaseIntFrame
     */
    public PurchaseInternalFrame() {

        model = new PurchaseTableModel();
        PurchaseServices service = new PurchaseServices();
        model.purchasedItem = service.getAll();
        initComponents();
        fillItemBox();
//        productDropDownnBox.setSelectedItem(null);
        Date d = new Date();
        SimpleDateFormat df = new SimpleDateFormat("yyyy-MMM-dd");
        dateTxt.setText(d.toString());

    }

    public void calculatePrice() {
        String itemName = (String) productDropDownnBox.getSelectedItem();
        float price = Float.parseFloat(String.valueOf(product_type.get(itemName)));
        float total_price = price * Float.parseFloat(quantitySpiner.getValue().toString());
        if (!quantitySpiner.equals(0)) {
            totalPriceField.setText(String.valueOf(total_price));
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buyBtn = new javax.swing.JButton();
        quantitySpiner = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        totalPriceField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        productDropDownnBox = new javax.swing.JComboBox<>();
        addBtn = new javax.swing.JButton();
        dateTxt = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        purchaseTable = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setResizable(true);
        setMinimumSize(new java.awt.Dimension(129, 25));

        buyBtn.setText("Buy");
        buyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buyBtnActionPerformed(evt);
            }
        });
        buyBtn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                buyBtnKeyReleased(evt);
            }
        });

        quantitySpiner.setModel(new javax.swing.SpinnerNumberModel(0.0f, 0.0f, null, 1.0f));
        quantitySpiner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                quantitySpinerStateChanged(evt);
            }
        });
        quantitySpiner.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quantitySpinerMouseClicked(evt);
            }
        });
        quantitySpiner.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                quantitySpinerKeyReleased(evt);
            }
        });

        jLabel1.setText("Quantity:");

        jLabel2.setText("Date:");

        jLabel3.setText("Total:");

        totalPriceField.setEditable(false);
        totalPriceField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalPriceFieldActionPerformed(evt);
            }
        });

        jLabel4.setText("Product:");

        productDropDownnBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                productDropDownnBoxItemStateChanged(evt);
            }
        });
        productDropDownnBox.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                productDropDownnBoxComponentShown(evt);
            }
        });
        productDropDownnBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productDropDownnBoxActionPerformed(evt);
            }
        });

        addBtn.setText("Add");

        dateTxt.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dateTxtPropertyChange(evt);
            }
        });

        purchaseTable.setModel(model);
        jScrollPane1.setViewportView(purchaseTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(quantitySpiner, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(totalPriceField, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buyBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(productDropDownnBox, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(addBtn)
                        .addGap(60, 60, 60)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dateTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(32, 32, 32))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dateTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jLabel4)
                        .addComponent(productDropDownnBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(addBtn)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(quantitySpiner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(totalPriceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buyBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buyBtnActionPerformed
        if (Float.parseFloat(totalPriceField.getText()) == 0) {
            JOptionPane.showMessageDialog(this, "Quantity cannot be \"0\"", "Message", JOptionPane.ERROR_MESSAGE);
        } 
        else {
//            System.outproductDropDownnBox.getSelectedItem().toString();
            
            PurchaseServices service = new PurchaseServices();
            Float totalPrice = Float.parseFloat(totalPriceField.getText());

//            below to be substituted by product table model class
            Unit unit = new Unit(1, "fod", "Fod");
            Date date = new Date();
            ProductGroup productGroup = new ProductGroup(1, "fod", "Fod");
            Product product = new Product(1 , "fod",
                    "Food",
//                    productDropDownnBox.getSelectedItem().toString(),
                    10.1f,
                    22.1f,
                    unit,
                    productGroup
            );
            Purchase purchase = new Purchase(product, date, (Float) quantitySpiner.getValue(), totalPrice);
            try {
                service.buy(purchase);
            } catch (IOException ex) {
            }

            model.purchasedItem = service.getAll();
            model.fireTableDataChanged();
            totalPriceField.setText("");
            quantitySpiner.setValue(1);

        }
    }//GEN-LAST:event_buyBtnActionPerformed

    private void totalPriceFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalPriceFieldActionPerformed
    }//GEN-LAST:event_totalPriceFieldActionPerformed

    private void quantitySpinerKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quantitySpinerKeyReleased

    }//GEN-LAST:event_quantitySpinerKeyReleased

    private void productDropDownnBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productDropDownnBoxActionPerformed


    }//GEN-LAST:event_productDropDownnBoxActionPerformed

    private void productDropDownnBoxComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_productDropDownnBoxComponentShown

    }//GEN-LAST:event_productDropDownnBoxComponentShown

    private void quantitySpinerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quantitySpinerMouseClicked

    }//GEN-LAST:event_quantitySpinerMouseClicked

    private void quantitySpinerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_quantitySpinerStateChanged
        calculatePrice();

    }//GEN-LAST:event_quantitySpinerStateChanged

    private void buyBtnKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buyBtnKeyReleased

    }//GEN-LAST:event_buyBtnKeyReleased

    private void dateTxtPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dateTxtPropertyChange
    }//GEN-LAST:event_dateTxtPropertyChange

    private void productDropDownnBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_productDropDownnBoxItemStateChanged
        calculatePrice();
    }//GEN-LAST:event_productDropDownnBoxItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JButton buyBtn;
    private javax.swing.JLabel dateTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> productDropDownnBox;
    private javax.swing.JTable purchaseTable;
    private javax.swing.JSpinner quantitySpiner;
    private javax.swing.JTextField totalPriceField;
    // End of variables declaration//GEN-END:variables
}
